<?php 

/**
 * @file trello_integration.module
 */

/**
 * Implements hook_menu
 */
function trello_integration_menu() {
  return array(
    'trello_roadmap' => array(
      'title' => 'Trello Roadmap',
      //'file' => '/getsatisfaction_integration.roadmap.inc',
      'page callback' => 'trello_integration_roadmap',
      'access arguments' => array('access content'),
    ),
  );
}

/**
 * Implements hook_libraries_info
 *
 * Provides Trello.php from  https://bitbucket.org/mattzuba/php-trello
 */
function trello_integration_libraries_info() {
  return array(
    'php-trello' => array(
      'name' => 'PHP Trello API',
      'files' => array('php' => array('Trello/Trello.php')),
      'version' => 'master',
      'callbacks' => array('pre-load' => array('_trello_integration_include_crud')),
    ),
  );
}

/**
 * @function trello_integration_client
 * 
 * Returns client object for accessing trello.
 */
function trello_integration_client() {
  static $gh_client;
  if (!empty($gh_client)) {
    return $gh_client;
  }

  libraries_load('php-trello');

  $key = variable_get('trello_integration_key');
  $secret = variable_get('trello_integration_secret');
  $token = variable_get('trello_integration_token');

  if (!$key || !($secret || $token)) {
    throw new Exception('Trello isn\'t configured.');
  }

  $trello = ($token) ?  new \Trello\Trello($key, NULL, $token) : new \Trello\Trello($key, $secret);
  return $trello;
}


/**
 * @function trello_integration_roadmap
 * 
 * Displays a roadmap based on cards from trello.
 */
function trello_integration_roadmap() {
  $trello = trello_integration_client();
  $board = '1xNAf1dj'; 
  $lists = array();

  foreach (trello_integration_lists($board) as $list) {
    if ($list->name == 'Inbox') {
      //inbox won't be shown.  it's for sorting.  but here's some dpms for reference.
      dpm($list);
      dpm(trello_integration_cards($list->id));
      //continue;
    }  
    
    $cards = trello_integration_cards($list->id);
    
    foreach ($cards as $card) {
      if ($card->badges->comments) {
        dpm(trello_integration_card_comments($card));
      }
    }
    
    $lists[] = array(   
      '#items' => array_map(create_function('$o', 'return $o->name;'), $cards),
      '#title' => $list->name,
      '#theme' => 'item_list',
      '#type' => 'ul',
      '#attributes' => array(), 
    );
  }

  
  //just playing with webhooks
  $card_id = '520253a438a1ab8d64002f25';
  $url = 'http://requestb.in/xn4kigxn';
  
//   $card_id = '4fad2e29cae4d3903801a244'; //card's comment
//   $out = trello_integration_create_webhook($card_id, $url, 'req bin');
  //dpm($out);
  //$card = trello_integration_card($card_id);
  
  //dpm($card);
  
  dpm(trello_integration_webhooks());
  return $lists;
}


//wrapper for webhook.  creates a webhook to a specific service here.
function trello_integration_integrated_support_webhook($trello_id, $service, $service_id, $description = '') {
  if (!in_array($service, module_implements('integrated_support_info'))) {
    return;
  }
  global $base_url;

  $callback_url = $base_url . '/integrated_support/trello_integration/' . $service_id;
  trello_integration_create_webhook($trello_id, $callback_url, $description);
}

/**
 * @function _trello_integration_include_crud
 * 
 * Callback function for loading trello library, loads trello crud php 
 */
function _trello_integration_include_crud() {
  require_once(drupal_get_path('module', 'trello_integration') . '/trello_integration.crud.inc'); 
}
